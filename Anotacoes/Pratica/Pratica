 Utilizando as Migrations.
 
    yarn sequelize migration:create --name=nome_migration
     - Cria uma migration
    yarn sequelize db:migrate
     - executa a ultima migration
    yarn sequelize db:migrade:undo
     - executa o callback da ultima migrate
     
Criptogradando senhas

    yarn add bcryptjs
    
    bcrypt.hash(string, <força da criptografia (numerico - default 8)>)
    
Autenticando rotas

    yarn add jsonwebtoken
    
    - Assina o token
    jwt.sign({payload}, <string unica>, {
    expiresIn: '7d'})
    
Validando dados

    yarn add yup
    
    import * as yup from 'yup'
    
    -- validando um objeto (json)
    -- definando shape (formato) e validações em formato de função
    const schema = yup.object().shape({
        name: yup.string().required()
    })
    
    schema.isValid(req.body) retorna se a requisão está valida de acordo com o formato definido
    
    .when('nome campo', (nome campo, field(campo atual) => condição { retorno} )
    
    .ondeOf([opções de campos])
    yup.ref('nome campo referenciado')
